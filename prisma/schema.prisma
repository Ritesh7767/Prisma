// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String          @id @default(uuid())
  email           String          @unique
  name            String?
  isAdmin         Boolean
  preferences     Json?
  age             Int
  role            Role            @default(BASIC)
  // blog        Unsupported("")
  // post        Post[]
  Post            Post[]          @relation("WrittenPost")
  favouritePost   Post[]          @relation("favouritePost")
  userPreferences UserPreference?

  @@unique([age, name])
  @@index([email, name])
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

model Post {
  id            String     @id @default(uuid())
  title         String
  averageRating Float
  createAt      DateTime   @default(now())
  updateAt      DateTime   @updatedAt
  author        User       @relation("WrittenPost", fields: [userId], references: [id])
  // author   User     @relation(fields: [authorId], references: [id])
  // authorId Int
  userId        String
  favouriteBy   User?      @relation("favouritePost", fields: [favouriteById], references: [id])
  favouriteById String?
  categories    Category[]

  // @@id(title, authorId)
}

model Category {
  id   String @id @default(uuid())
  name String @unique
  post Post[]
}

enum Role {
  BASIC
  ADMIN
}
